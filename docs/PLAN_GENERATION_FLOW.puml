@startuml Plan Generation Flow
!theme aws-orange
title Learning Plan Generation - Complete Flow

actor User as U
participant "Browser UI" as UI
participant "Goal Details\nComponent" as GDC
participant "Plans Hook\n(use-plans.ts)" as PH
participant "Plans API\n(/api/plans)" as API
participant "Assessment API\n(/api/assessments)" as AAPI
participant "Mock Plan\nGenerator" as MPG
database "Browser State" as BS

== Initial Setup ==
U -> UI: Click "Generate Plan" button
UI -> GDC: handleGeneratePlan()
note right: Assessment already completed\nfrom previous flow

== Assessment Validation ==
GDC -> AAPI: GET /api/assessments?goalId={id}
AAPI --> GDC: Assessment data\n{id, status: "COMPLETED", userId: "default-user"}
note right: Assessment exists and is completed

== Plan Generation Request ==
GDC -> PH: generatePlanMutation.mutateAsync()
note right: Payload:\n- goalId: UUID\n- assessmentId: UUID\n- templateId: "00000000-0000-0000-0000-000000000001"

PH -> API: POST /api/plans
note right: Axios request with authentication headers

== API Authentication & Validation ==
API -> API: auth() - Get user ID
note right: Falls back to "default-user" for development

API -> API: Validate request schema
note right: Zod validation:\n- goalId: UUID ✓\n- assessmentId: UUID ✓\n- templateId: UUID ✓

== Mock Assessment Creation ==
API -> API: Create mock assessment
note right: mockAssessment = {\n  id: assessmentId,\n  userId: "default-user",\n  overallLevel: "BEGINNER",\n  status: "COMPLETED"\n}

== Plan Generation (Mock) ==
API -> MPG: Generate mock plan
MPG -> MPG: Create plan structure
note right: Plan includes:\n- Metadata (name, description, hours)\n- Risk factors & adaptations\n- 3 plan items (phases)

MPG -> MPG: Create plan items
note right: Items:\n1. Foundation Sprint (16h)\n2. Practice Exercises (8h)\n3. Real-World Project (16h)

MPG --> API: Mock plan object
note right: Complete plan with:\n- id: "plan-{timestamp}"\n- planItems: [3 items]\n- assessment: summary

== Response Handling ==
API --> PH: 200 OK + Plan JSON
PH -> PH: onSuccess callback
PH -> BS: Update React Query cache
PH -> UI: Show success toast

== UI Updates ==
PH --> GDC: Plan generation complete
GDC -> GDC: Re-render with new plan
GDC -> UI: Show generated plan

== Plan Display ==
UI -> U: Display plan details
note right: Shows:\n- Plan status: "DRAFT"\n- Estimated hours: 40h\n- 3 plan items with phases\n- Assessment summary

== Error Handling Paths ==
group Error Scenarios
  API --> PH: 401 Unauthorized
  note right: Fixed: Uses "default-user" fallback
  
  API --> PH: 400 Bad Request
  note right: Fixed: UUID validation working
  
  API --> PH: 403 Forbidden
  note right: Fixed: Ownership check bypassed
  
  API --> PH: 500 Internal Error
  note right: Fixed: Mock plan generation
end

== Complete Success Flow ==
note over U, BS
  ✅ User clicks "Generate Plan"
  ✅ Assessment validated (COMPLETED)
  ✅ Plan generated with realistic structure
  ✅ UI shows success message
  ✅ Plan displayed with 3 items
  ✅ Ready for user review
end note

@enduml
