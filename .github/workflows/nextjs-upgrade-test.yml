name: Next.js Upgrade Testing

on:
  push:
    branches:
      - feature/nextjs-15-update
  pull_request:
    branches:
      - main
      - feature/nextjs-15-update

env:
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
  CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
  UPSTASH_REDIS_REST_URL: ${{ secrets.UPSTASH_REDIS_REST_URL }}
  UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_REDIS_REST_TOKEN }}

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run type checking
      run: npx tsc --noEmit
      continue-on-error: true
    
    - name: Run linting
      run: npm run lint
      continue-on-error: true
    
    - name: Run security audit
      run: npm audit
      continue-on-error: true
    
    - name: Test build
      run: npm run build
    
    - name: Check bundle size
      run: |
        npm install --save-dev size-limit @size-limit/preset-app
        npx size-limit --json > bundle-size.json
        cat bundle-size.json
      continue-on-error: true

  lighthouse:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Run Lighthouse CI
      run: |
        npm install -g @lhci/cli
        lhci autorun || true
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
      continue-on-error: true

  dependency-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Check for outdated packages
      run: npm outdated
      continue-on-error: true
    
    - name: Check for unused dependencies
      run: npx depcheck
      continue-on-error: true
    
    - name: License check
      run: npx license-checker --summary
      continue-on-error: true

  prisma-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Validate Prisma schema
      run: npx prisma validate
    
    - name: Check Prisma migrations
      run: npx prisma migrate status
      continue-on-error: true
